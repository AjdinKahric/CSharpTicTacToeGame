<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>